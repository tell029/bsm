% Generated by roxygen2 (4.0.2): do not edit by hand
\name{bsm}
\alias{bsm}
\alias{print.bsmfit}
\alias{summary.bsmfit}
\title{Fit a Bayesian Selectivity Model}
\usage{
bsm(x, family = "binomial", curve = "logistic", check.od = TRUE,
  od = FALSE, combine = FALSE, random = NULL, L50 = ~1, SR = ~1,
  phi = if (attr(x, "paired")) ~1 else NULL, delta = if (curve ==
  "richards") ~1 else NULL, priors = NULL, inits = NULL,
  length.dist = "iid", parameters = par$summary.parameters, file = NULL,
  fit = TRUE, include.lambda = FALSE, n.samples = 1000, n.thin = 1,
  n.burn = n.samples * n.thin, n.chains = 3, max.attempts = 10,
  quiet = FALSE, progress.bar = "text", ...)

\method{print}{bsmfit}(x, model = FALSE, coda = FALSE, ...)

\method{summary}{bsmfit}(object, p.values = FALSE, formula.values = FALSE,
  predict.values = NULL, ...)
}
\arguments{
\item{x}{an object of class \code{bsmdata}, from the \code{bsmData} function}

\item{family}{\code{"logistic"} (default) or \code{"poisson"}, the family for the likelihood}

\item{curve}{\code{"logistic"} or \code{"richards"}, the type of selection curve to be fitted
(will likely allow other options, for example "Bspline", future)}

\item{check.od}{logical, if \code{TRUE}, then overdispersion estimates will be produced}

\item{od}{logical, if \code{TRUE}, the model will be fit allowing for overdispersion}

\item{combine}{logical, if \code{TRUE}, then the 'combined hauls' approach is used, otherwise a
hierarchical approach is used.}

\item{random}{vector of parameters to have hierarchical or random effects}

\item{L50}{the formula for L50, default is L50 = ~1}

\item{SR}{the formula for SR, default is SR = ~1}

\item{phi}{the formula for phi, default is phi = ~1}

\item{delta}{the formula for delta, default is delta = ~1}

\item{priors}{the prior distributions for specified parameters. See details.}

\item{inits}{initial values for parameters}

\item{length.dist}{'iid' or "multinomial", the type of length distribution for the lambda
parameters. See details for more information.}

\item{parameters}{the parameters to save in the JAGS output. NOTE: only use this if you really
really only want these parameters - may cause errors in summary output and plots depending on
parameters selected.}

\item{file}{the file name to save the JAGS model in. If \code{NULL}, then a temporary file is
created}

\item{fit}{logical, if \code{TRUE} then the JAGS model is fit, otherwise only the model and data
are returned.}

\item{include.lambda}{logical, if \code{TRUE}, the lambda parameter will be saved as well}

\item{n.samples}{the total number of samples to obtain (excludes burnin and thin)}

\item{n.thin}{the thinning interval}

\item{n.burn}{the burn in period}

\item{n.chains}{the number of chains}

\item{max.attempts}{the maximum number of times bsm will attempt to fit the JAGS model (often
due to bad initial values, the model cannot be initiated and fails)}

\item{quiet}{suppress all output messages from JAGS?}

\item{progress.bar}{one of "none", "text" or "gui" for the JAGS progress bar}

\item{...}{additional arguments}

\item{model}{logical, if \code{TRUE}, then the JAGS model is printed, otherwise summary
information is provided}

\item{coda}{logical, if \code{TRUE}, then the summary from the \code{coda} package is used}

\item{object}{a bsmfit object}

\item{p.values}{logical, include significance tests for parameters != 0?}

\item{formula.values}{logical, display values in formulae?}

\item{predict.values}{values to be included in the prediction}
}
\value{
an object of class \code{bsmfit}
}
\description{
Creates and fits a selection curve to the supplied \code{bsmdata} object. The correct data list
is created, the JAGS model constructed, and the model is run with default settings. It is also
possible to suppress the running of the JAGS and simply output the model and data.
}
\details{
There are going to be a lot of details ...
}
\section{Methods (by generic)}{
\itemize{
\item \code{print}: Print the summary of the model, or the model code

\item \code{summary}: Generate summary output for a bsmfit object
}}
\author{
Tom Elliott
}

